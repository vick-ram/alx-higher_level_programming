=============================
Use 2-matrix_divided.py Tests
==============================

This library module has a function called ```matrix_divided()```

Numbers
========
```matrix_divided()``` returns tests for matrix

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

test for division by 1

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

tests for 3x divided by 2

::

    >>> matrix_divided([[1, 2, 3], [4, 4, 6], [7, 8, 9]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

tests for 2x divided by 2

::
    >>> matrix_divided([[1, 2], [3, 4], [5, 6]], 2)
    [[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

tests for floating point matrix

::

    >>> matrix_divided([[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]], 0.5)
    [[3.0, 5.0, 7.0], [9.0, 11.0, 13.0]]

String Division
===============

test for division by string

::

    >>> matrix_divided([[1, 2], [3, 4]], 'two')
    Traceback (most recent call last):
    TypeError: div must be a number

::

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

::

    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

::

    >>> matrix_divided([[1, 2, 3], [4, 5, '6']], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
